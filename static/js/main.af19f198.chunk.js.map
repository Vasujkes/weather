{"version":3,"sources":["actions/index.js","actions/types.js","helpers/icon.js","components/Preview.jsx","containers/Weather.js","helpers/time.js","helpers/temp.js","components/WeatherModal.jsx","components/WeatherInfo.jsx","containers/App.js","reducers/weatherReducer.js","reducers/index.js","store.js","index.js","assets/cloudy.svg","assets/sunny.svg","assets/drizzle.svg","assets/showers.svg","assets/snow.svg","assets/thunderstroms.svg","assets/tornado.svg"],"names":["API_KEY","ROOT_URL","SEARCH_URL","fetchWeather","city","result","axios","url","method","dispatch","type","then","data","payload","fetchWeatherSuccess","list","catch","error","fetchWeatherFail","fetchCurrent","fetchCurrentSuccess","fetchCurrentFail","rangeId","thunderstroms","drizzle","showers","snow","tornado","sunny","cloudy","useStyles","makeStyles","root","minWidth","borderRadius","position","bullet","display","margin","transform","title","fontSize","img","right","Preview","name","weather","temperature","select","classes","React","useState","open","setOpen","Card","className","CardContent","src","icon","id","alt","Typography","color","gutterBottom","variant","component","Math","floor","description","CardActions","Button","size","onClick","handleClose","connect","current","isLoading","rows","map","item","time","temp","humidity","pressure","createData","date","formatDate","fromUnixTime","currentWeek","differenceInCalendarWeeks","Date","weekStartsOn","isToday","format","dt","main","tableHead","Temperature","Humidity","Pressure","Weather","DialogContent","withStyles","theme","padding","spacing","MuiDialogContent","CityInfo","Dialog","onClose","aria-labelledby","dividers","flexGrow","paper","palette","text","secondary","head","background","WeatherInfo","Table","aria-label","TableHead","TableRow","Object","keys","tableHeadName","TableCell","key","TableBody","body","align","Skeleton","row","scope","vvariant","textAlign","height","Alert","props","elevation","bindActionCreators","errorMessage","useEffect","Container","maxWidth","Grid","container","severity","xs","sm","md","coord","initialState","rootReducer","combineReducers","state","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.af19f198.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport * as types from \"./types\";\r\n\r\nconst API_KEY = \"5fe54d9685bf951863b35fc169ea60a4\";\r\nconst ROOT_URL = `https://api.openweathermap.org/data/2.5/group?id=1496153,524901,703448,2643743&units=metric&appid=${API_KEY}`;\r\nconst SEARCH_URL = `https://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`;\r\n\r\nfunction fetchWeatherStart() {\r\n  const action = { type: types.FETCH_WEATHER_START };\r\n  return action;\r\n}\r\n\r\nfunction fetchWeatherSuccess(data) {\r\n  const action = { type: types.FETCH_WEATHER_SUCCESS, payload: data };\r\n  return action;\r\n}\r\n\r\nfunction fetchWeatherFail(error) {\r\n  const action = { type: types.FETCH_WEATHER_FAIL, payload: error };\r\n  return action;\r\n}\r\n\r\nfunction fetchCurrentStart() {\r\n  const action = { type: types.FETCH_CURRENT_START };\r\n  return action;\r\n}\r\n\r\nfunction fetchCurrentSuccess(data) {\r\n  const action = { type: types.FETCH_CURRENT_SUCCESS, payload: data };\r\n  return action;\r\n}\r\n\r\nfunction fetchCurrentFail(error) {\r\n  const action = { type: types.FETCH_CURRENT_FAIL, payload: error };\r\n  return action;\r\n}\r\n\r\n\r\nexport function fetchWeather(city) {\r\n  const result = axios({\r\n    url: `${ROOT_URL}`,\r\n    method: \"get\",\r\n  });\r\n  return function (dispatch) {\r\n    dispatch(fetchWeatherStart());\r\n    return result\r\n      .then(({ data }) => {\r\n        dispatch(fetchWeatherSuccess(data.list));\r\n\r\n        return data.list;\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchWeatherFail(error));\r\n        return error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchCurrent(city) {\r\n  const result = axios({\r\n    url: `${SEARCH_URL}&q=${city}`,\r\n    method: \"get\",\r\n  });\r\n  return function (dispatch) {\r\n    dispatch(fetchCurrentStart());\r\n    return result\r\n      .then(({ data }) => {\r\n        dispatch(fetchCurrentSuccess(data.list));\r\n\r\n        return data.list;\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchCurrentFail(error));\r\n        return error;\r\n      });\r\n  };\r\n}\r\n\r\n","export const FETCH_WEATHER = \"FETCH_WEATHER\";\r\nexport const FETCH_WEATHER_START = \"FETCH_WEATHER_START\";\r\nexport const FETCH_WEATHER_SUCCESS = \"FETCH_WEATHER_SUCCESS\";\r\nexport const FETCH_WEATHER_FAIL = \"FETCH_WEATHER_FAIL\";\r\n\r\nexport const FETCH_CURRENT = \"FETCH_CURRENT\";\r\nexport const FETCH_CURRENT_START = \"FETCH_CURRENT_START\";\r\nexport const FETCH_CURRENT_SUCCESS = \"FETCH_CURRENT_SUCCESS\";\r\nexport const FETCH_CURRENT_FAIL = \"FETCH_CURRENT_FAIL\";\r\n","import sunny from \"../assets/sunny.svg\"\r\nimport cloudy from \"../assets/cloudy.svg\"\r\nimport drizzle from \"../assets/drizzle.svg\"\r\nimport showers from \"../assets/showers.svg\"\r\nimport snow from \"../assets/snow.svg\"\r\nimport thunderstroms from \"../assets/thunderstroms.svg\"\r\nimport tornado from \"../assets/tornado.svg\"\r\n\r\n\r\nexport default (rangeId) => {\r\n  switch (true) {\r\n    case rangeId >= 200 && rangeId < 232:\r\n      return thunderstroms\r\n    case rangeId >= 300 && rangeId <= 321:\r\n      return drizzle\r\n    case rangeId >= 500 && rangeId <= 521:\r\n      return showers\r\n    case rangeId >= 600 && rangeId <= 622:\r\n      return snow\r\n    case rangeId >= 701 && rangeId <= 781:\r\n      return tornado\r\n    case rangeId === 800:\r\n      return sunny\r\n    case rangeId >= 801 && rangeId <= 804:\r\n      return cloudy\r\n    default:\r\n      return cloudy\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { icon } from \"../helpers\";\r\nimport { WeatherModal } from \"./\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 220,\r\n    borderRadius: 10,\r\n    position: \"relative\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  img: {\r\n    position: \"absolute\",\r\n    right: 20,\r\n  },\r\n});\r\n\r\nexport default function Preview({\r\n  name,\r\n  weather,\r\n  temperature,\r\n  select,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    select(name);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <img\r\n          src={icon(weather.id)}\r\n          className={classes.img}\r\n          alt={`weather-icon-${name}`}\r\n        ></img>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          {name}\r\n        </Typography>\r\n        <Typography variant=\"h3\" component=\"h2\">\r\n          {Math.floor(temperature)}°C\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {weather.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" onClick={handleOpen}>\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n      <WeatherModal open={open} handleClose={handleClose} name={name}/>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { WeatherInfo } from \"../components\";\r\n\r\nimport { time, icon, temp } from \"../helpers\";\r\n\r\nfunction createData(time, temp, humidity, pressure, weather) {\r\n  return { time, temp, humidity, pressure, weather };\r\n}\r\n\r\nconst Weather = ({ current, isLoading }) => {\r\n  const rows = current.map((item) =>\r\n    createData(\r\n      time(item.dt),\r\n      temp(item.main.temp),\r\n      item.main.humidity,\r\n      item.main.pressure,\r\n      icon(item.weather[0].id)\r\n    )\r\n  );\r\n\r\n  const tableHead = {\r\n    Date: \"Date\",\r\n    Temperature: \"Temperature\",\r\n    Humidity: \"Humidity\",\r\n    Pressure: \"Pressure\",\r\n    Weather: \"Weather\",\r\n  };\r\n\r\n\r\n  return <WeatherInfo current={current} data={rows} isLoading={isLoading} tableHead={tableHead}/>;\r\n};\r\nexport default connect(({ weather }) => weather)(Weather);\r\n","import {\r\n  fromUnixTime,\r\n  differenceInCalendarWeeks,\r\n  format,\r\n  isToday,\r\n} from \"date-fns\";\r\n\r\nexport default (date) => {\r\n  const formatDate = fromUnixTime(date);\r\n  const currentWeek = differenceInCalendarWeeks(new Date(), formatDate, {\r\n    weekStartsOn: 1,\r\n  });\r\n\r\n  if (isToday(formatDate)) {\r\n    return format(formatDate, \"HH:mm\");\r\n  }\r\n\r\n  if (currentWeek === 0) {\r\n    return format(formatDate, \"E HH:mm\");\r\n  }\r\n\r\n  return format(formatDate, \"MM.dd HH:mm\");\r\n};\r\n","export default (temp) => Math.floor(temp - 273.15);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport Weather from \"../containers/Weather\";\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nexport default function CityInfo({ open, handleClose }) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <Weather />\r\n        <DialogContent dividers></DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  head: {\r\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n\r\n    \"& th\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst WeatherInfo = ({ data, isLoading, tableHead }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead className={classes.head}>\r\n          <TableRow>\r\n            {Object.keys(tableHead).map((tableHeadName) => (\r\n              <TableCell key={tableHeadName}>\r\n                <Typography variant=\"h6\">{tableHeadName}</Typography>\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className={classes.body}>\r\n          {!isLoading ? (\r\n            data &&\r\n            data.map((row) => (\r\n              <TableRow key={row.time}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    {row.time}\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography vvariant=\"subtitle2\" gutterBottom>\r\n                    {row.temp}°C\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography vvariant=\"subtitle2\" gutterBottom>\r\n                    {row.humidity}%\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography vvariant=\"subtitle2\" gutterBottom>\r\n                    {row.pressure} hPa\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <img src={row.weather} alt=\"weather-icon\" />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              {Object.keys(tableHead).map((tableHeadName) => (\r\n                <TableCell align=\"right\" key={tableHeadName}>\r\n                  <Skeleton />\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherInfo;\r\n","import React, { useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport { fetchWeather, fetchCurrent } from \"../actions/index\";\nimport { Preview } from \"../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(6),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    height: \"150px\",\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction App({ data, fetchWeather, fetchCurrent, isLoading, errorMessage }) {\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchWeather();\n  }, [fetchWeather]);\n\n  useEffect(() => {}, [isLoading]);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.root}>\n      <Grid container spacing={3}>\n        {!errorMessage ? (\n          data &&\n          data.map((city) => (\n            <Grid item xs={12} sm={6} md={4} key={city.id}>\n              <Preview\n                name={city.name}\n                weather={city.weather[0]}\n                temperature={city.main.temp}\n                coord={city.coord}\n                select={fetchCurrent}\n                isLoading={isLoading}\n              />\n            </Grid>\n          ))\n        ) : (\n          <Alert severity=\"error\">{errorMessage}</Alert>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ fetchWeather, fetchCurrent }, dispatch);\n}\n\nexport default connect(({ weather }) => weather, mapDispatchToProps)(App);\n","import * as actions from \"../actions/types\";\r\n\r\nexport const initialState = {\r\n  data: [],\r\n  current: [],\r\n  isLoading: false,\r\n  errorMessage: \"\",\r\n};\r\n\r\nexport function weatherReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.FETCH_WEATHER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: [...action.payload],\r\n        errorMessage: \"\",\r\n      };\r\n    case actions.FETCH_WEATHER_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: \"\",\r\n      };\r\n    case actions.FETCH_WEATHER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: \"При загрузке произошла ошибка\",\r\n      };\r\n\r\n    case actions.FETCH_CURRENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        current: [...action.payload],\r\n        errorMessage: \"\",\r\n      };\r\n    case actions.FETCH_CURRENT_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: \"\",\r\n      };\r\n    case actions.FETCH_CURRENT_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: \"Данные по городу не найдены\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { weatherReducer } from \"./weatherReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  weather: weatherReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/cloudy.3e687346.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunny.99453e02.svg\";","module.exports = __webpack_public_path__ + \"static/media/drizzle.9758264f.svg\";","module.exports = __webpack_public_path__ + \"static/media/showers.92a8f1ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.910a5227.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstroms.676a6c2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/tornado.955b65ff.svg\";"],"sourceRoot":""}